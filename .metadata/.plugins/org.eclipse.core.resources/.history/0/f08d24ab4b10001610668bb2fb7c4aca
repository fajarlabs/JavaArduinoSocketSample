import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
//File Name GreetingServer.java
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketTimeoutException;
import java.util.List;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

import com.app.arduino.util.ArduinoUtil;
import com.app.config.PortConfig;
import com.app.socket.util.SocketServerUtil;
import com.app.sqlite.dao.AppArduinoSwitchDAO;
import com.app.sqlite.model.AppArduinoSwitch;

/**
 * 
 * @author masfajar
 *
 */

public class SocketService extends Thread {
	private ArduinoUtil arduino;
	private Boolean loop = true;

	private SocketServerUtil socket;

	public SocketService(int port) throws IOException {

		socket = new SocketServerUtil(port, 10000);
		if(!socket.init())
			System.exit(0);

		// Init arduino connection
		arduino = new ArduinoUtil();
		// If connection is failed, then ?
		if (!arduino.initialize())
			// Shutdown program
			System.exit(0);
		@SuppressWarnings("unused")
		AppArduinoSwitch d = new AppArduinoSwitch();
		// Update last setting by temporary DB
		List<AppArduinoSwitch> tempData = AppArduinoSwitchDAO.read();
		for (AppArduinoSwitch o : tempData) {
			arduino.sendData(o.getCommandValue());
		}

	}

	public void run() {
		while (loop) {
			
			// Accept
			//socket.connect();
			// Info
			System.out.println("Waiting for client host " + socket.getHostName() + " and on port "
					+ socket.getLocalPort() + "...");
			// JSON Parser
			JSONParser parser = new JSONParser();
			// Receive JSON Object
			JSONObject jsonObject = null;
			try {
				jsonObject = (JSONObject) parser.parse(socket.receiveData());
				String switchName = (String) jsonObject.get("switchName");
				String commandValue = (String) jsonObject.get("commandValue");

				// Update temporary DB
				AppArduinoSwitch o = new AppArduinoSwitch(null, switchName, commandValue);
				AppArduinoSwitchDAO.updateBySwitchName(o);

				// Send to arduino
				arduino.sendData(commandValue);
			} catch (ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}

			// Send Data
			socket.sendData("SERVER RESPONSE " + jsonObject.toString());
		}
	}

	public void stopSocketService() {
		this.loop = true;
	}

	public void startSocketService() {
		this.loop = false;
	}

	public static void main(String[] args) {
		try {
			Thread t = new SocketService(PortConfig.SocketPort);
			t.start();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
}